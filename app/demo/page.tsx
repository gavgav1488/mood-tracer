'use client';

import { useState } from 'react';
import { DropdownFilter } from '../../src/components/ui/dropdown-filter';
import { Button } from '@/components/ui/button';
import { ChevronDown, Heart, Smile, Brain } from 'lucide-react';
import {
  CaretDownOutlined,
  HeartFilled,
  SmileOutlined as AntSmileOutlined,
  FireOutlined,
  CalendarOutlined,
  BellOutlined
} from '../../src/components/icons/ant-icons';

const moodOptions = [
  { value: 'happy', label: '–†–∞–¥–æ—Å—Ç–Ω–æ–µ', emoji: 'üòä' },
  { value: 'calm', label: '–°–ø–æ–∫–æ–π–Ω–æ–µ', emoji: 'üòå' },
  { value: 'excited', label: '–í–∑–≤–æ–ª–Ω–æ–≤–∞–Ω–Ω–æ–µ', emoji: 'ü§©' },
  { value: 'sad', label: '–ì—Ä—É—Å—Ç–Ω–æ–µ', emoji: 'üò¢' },
  { value: 'angry', label: '–ó–ª–æ–µ', emoji: 'üò§' },
  { value: 'inspired', label: '–í–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ', emoji: '‚ú®' },
];

const timeOptions = [
  { value: 'today', label: '–°–µ–≥–æ–¥–Ω—è', emoji: 'üìÖ' },
  { value: 'week', label: '–≠—Ç–∞ –Ω–µ–¥–µ–ª—è', emoji: 'üìä' },
  { value: 'month', label: '–≠—Ç–æ—Ç –º–µ—Å—è—Ü', emoji: 'üìà' },
  { value: 'year', label: '–≠—Ç–æ—Ç –≥–æ–¥', emoji: 'üóìÔ∏è' },
];

export default function DemoPage() {
  const [selectedMood, setSelectedMood] = useState('');
  const [selectedTime, setSelectedTime] = useState('today');

  return (
    <div className="min-h-screen bg-gradient-to-br from-background via-secondary/5 to-background">
      <div className="container mx-auto px-4 py-16">
        {/* Header */}
        <div className="text-center mb-12">
          <div className="inline-flex items-center space-x-2 rounded-full glass-card px-4 py-2 text-sm font-medium text-primary mb-6">
            <CaretDownOutlined className="h-4 w-4 animate-bounce" />
            <span className="font-handwritten text-base">–î–µ–º–æ Ant Design ‚ú®</span>
          </div>

          <h1 className="text-4xl font-bold tracking-tight sm:text-5xl md:text-6xl mb-6">
            <span className="text-gradient-cosmic">–í—ã–ø–∞–¥–∞—é—â–∏–µ</span>
            <br />
            <span className="font-handwritten text-gradient-primary">–º–µ–Ω—é</span>
          </h1>

          <p className="max-w-[600px] mx-auto text-lg md:text-xl text-muted-foreground leading-relaxed">
            –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–∫–æ–Ω–∫–∏ ChevronDown –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ üéØ
          </p>
        </div>

        {/* Demo Section */}
        <div className="max-w-4xl mx-auto">
          <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3">

            {/* Mood Filter */}
            <div className="glass-card rounded-3xl p-6">
              <div className="flex items-center gap-2 mb-4">
                <HeartFilled className="h-5 w-5 text-primary" />
                <h3 className="text-lg font-semibold">–§–∏–ª—å—Ç—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</h3>
              </div>
              <DropdownFilter
                options={moodOptions}
                value={selectedMood}
                onChange={setSelectedMood}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"
              />
              {selectedMood && (
                <div className="mt-4 p-3 glass-card rounded-2xl">
                  <p className="text-sm text-muted-foreground">
                    –í—ã–±—Ä–∞–Ω–æ: <span className="font-medium text-primary">
                      {moodOptions.find(m => m.value === selectedMood)?.label}
                    </span>
                  </p>
                </div>
              )}
            </div>

            {/* Time Filter */}
            <div className="glass-card rounded-3xl p-6">
              <div className="flex items-center gap-2 mb-4">
                <CalendarOutlined className="h-5 w-5 text-primary" />
                <h3 className="text-lg font-semibold">–ü–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏</h3>
              </div>
              <DropdownFilter
                options={timeOptions}
                value={selectedTime}
                onChange={setSelectedTime}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥"
              />
              <div className="mt-4 p-3 glass-card rounded-2xl">
                <p className="text-sm text-muted-foreground">
                  –ü–µ—Ä–∏–æ–¥: <span className="font-medium text-primary">
                    {timeOptions.find(t => t.value === selectedTime)?.label}
                  </span>
                </p>
              </div>
            </div>

            {/* Action Button */}
            <div className="glass-card rounded-3xl p-6">
              <div className="flex items-center gap-2 mb-4">
                <FireOutlined className="h-5 w-5 text-primary" />
                <h3 className="text-lg font-semibold">–î–µ–π—Å—Ç–≤–∏–µ</h3>
              </div>
              <Button className="w-full glass-button rounded-2xl font-medium px-4 py-3 bg-gradient-primary border-0 hover:scale-105 transition-all duration-300 flex items-center justify-center gap-2">
                <span>–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</span>
                <CaretDownOutlined className="h-4 w-4 animate-bounce" />
              </Button>
              <div className="mt-4 p-3 glass-card rounded-2xl">
                <p className="text-xs text-muted-foreground text-center">
                  Ant Design CaretDown —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π ‚¨áÔ∏è
                </p>
              </div>
            </div>

          </div>

          {/* Results Section */}
          {(selectedMood || selectedTime) && (
            <div className="mt-12 glass-card rounded-3xl p-8 animate-slide-up">
              <h2 className="text-2xl font-bold text-gradient-primary mb-6 text-center">
                –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ ‚ú®
              </h2>
              <div className="grid gap-4 md:grid-cols-2">
                <div className="p-4 bg-primary/5 rounded-2xl">
                  <h4 className="font-semibold mb-2">–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:</h4>
                  <p className="text-muted-foreground">
                    {selectedMood
                      ? `${moodOptions.find(m => m.value === selectedMood)?.emoji} ${moodOptions.find(m => m.value === selectedMood)?.label}`
                      : '–ù–µ –≤—ã–±—Ä–∞–Ω–æ'
                    }
                  </p>
                </div>
                <div className="p-4 bg-accent/5 rounded-2xl">
                  <h4 className="font-semibold mb-2">–ü–µ—Ä–∏–æ–¥:</h4>
                  <p className="text-muted-foreground">
                    {timeOptions.find(t => t.value === selectedTime)?.emoji} {timeOptions.find(t => t.value === selectedTime)?.label}
                  </p>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}
